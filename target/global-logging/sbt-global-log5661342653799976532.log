[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\danyl\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\danyl\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 15)
[debug]       Load.loadUnit: plugins took 113.994ms
[debug]       Load.loadUnit: defsScala took 0.261ms
[debug] [Loading] Scanning directory C:\Users\danyl\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\danyl\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.5267 ms
[debug]           Load.resolveProject(global-plugins) took 53.4552ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\danyl\.sbt\1.0\plugins, plugins: List(<none>))) took 109.8246ms
[debug] [Loading] Done in C:\Users\danyl\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 137.4522ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2402ms
[debug]     Load.loadUnit(file:/C:/Users/danyl/.sbt/1.0/plugins/, ...) took 264.0142ms
[debug]   Load.apply: load took 463.7823ms
[debug]   Load.apply: resolveProjects took 6.8242ms
[debug]   Load.apply: finalTransforms took 73.9026ms
[debug]   Load.apply: config.delegates took 11.2847ms
[debug]   Load.apply: Def.make(settings)... took 896.972ms
[debug]   Load.apply: structureIndex took 117.1285ms
[debug]   Load.apply: mkStreams took 1.3897ms
[info] loading global plugins from C:\Users\danyl\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3199.7906ms
[debug]           Load.loadUnit: plugins took 22.9027ms
[debug]           Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\danyl\IdeaProjects\scalaTest\project
[debug]             Load.loadUnit: mkEval took 4.625ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\danyl\IdeaProjects\scalaTest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.94 ms
[info] loading settings for project scalatest-build from idea1.sbt ...
[debug]               Load.resolveProject(scalatest-build) took 3.312ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatest-build, base: C:\Users\danyl\IdeaProjects\scalaTest\project, plugins: List(<none>))) took 5.8482ms
[debug] [Loading] Done in C:\Users\danyl\IdeaProjects\scalaTest\project, returning: (scalatest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 148.1135ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.7388ms
[debug]         Load.loadUnit(file:/C:/Users/danyl/IdeaProjects/scalaTest/project/, ...) took 177.5865ms
[debug]       Load.apply: load took 179.4421ms
[debug]       Load.apply: resolveProjects took 0.1449ms
[debug]       Load.apply: finalTransforms took 15.1524ms
[debug]       Load.apply: config.delegates took 0.5669ms
[debug]       Load.apply: Def.make(settings)... took 86.1378ms
[debug]       Load.apply: structureIndex took 32.6116ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\danyl\IdeaProjects\scalaTest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3010.8678ms
[debug]     Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\danyl\IdeaProjects\scalaTest
[debug]       Load.loadUnit: mkEval took 0.3447ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\danyl\IdeaProjects\scalaTest, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8162 ms
[info] loading settings for project scalatest from build.sbt ...
[debug]         Load.resolveProject(scalatest) took 30.0464ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalatest, base: C:\Users\danyl\IdeaProjects\scalaTest, plugins: List(<none>))) took 33.0343ms
[debug] [Loading] Done in C:\Users\danyl\IdeaProjects\scalaTest, returning: (scalatest)
[debug]     Load.loadUnit: loadedProjectsRaw took 2309.8309ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.3128ms
[debug]   Load.loadUnit(file:/C:/Users/danyl/IdeaProjects/scalaTest/, ...) took 5340.0885ms
[debug] Load.apply: load took 5341.8075ms
[debug] Load.apply: resolveProjects took 0.1647ms
[debug] Load.apply: finalTransforms took 25.3213ms
[debug] Load.apply: config.delegates took 0.2575ms
[debug] Load.apply: Def.make(settings)... took 76.4508ms
[debug] Load.apply: structureIndex took 31.5319ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to ScalaTest (in build file:/C:/Users/danyl/IdeaProjects/scalaTest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56816 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56816, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaTest (in build file:/C:/Users/danyl/IdeaProjects/scalaTest/)
[debug] > Exec(idea-shell, None, None)
